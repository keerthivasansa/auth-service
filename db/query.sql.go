// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: query.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (id, provider, providerId, name, password) VALUES (?, ?, ?, ?, ?)
`

type CreateUserParams struct {
	ID         string
	Provider   string
	Providerid string
	Name       string
	Password   string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser,
		arg.ID,
		arg.Provider,
		arg.Providerid,
		arg.Name,
		arg.Password,
	)
	return err
}

const getUser = `-- name: GetUser :one
SELECT id, name, password, provider, providerid FROM users WHERE provider = ? AND providerId = ? LIMIT 1
`

type GetUserParams struct {
	Provider   string
	Providerid string
}

func (q *Queries) GetUser(ctx context.Context, arg GetUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, arg.Provider, arg.Providerid)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Password,
		&i.Provider,
		&i.Providerid,
	)
	return i, err
}
